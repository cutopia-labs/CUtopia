{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:prettier/recommended"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["react", "@typescript-eslint", "unused-imports", "only-warn"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"], // Your TypeScript files extension

      // As mentioned in the comments, you should extend TypeScript plugins here,
      // instead of extending them outside the `overrides`.
      // If you don't want to extend any rules, you don't need an `extends` attribute.
      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      }
    }
  ],
  "rules": {
    "linebreak-style": ["error", "unix"],
    "react/jsx-props-no-spreading": "off",
    "react/prop-types": 0,
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-noninteractive-element-interactions": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "react/button-has-type": "off",
    "no-nested-ternary": "off",
    "camelcase": "off",
    "radix": "off",
    "react/destructuring-assignment": "off",
    "function-paren-newline": "off",
    "jsx-a11y/alt-text": "off",
    "jsx-a11y/media-has-caption": "off",
    "react/react-in-jsx-scope": "off",
    "no-confusing-arrow": "off",
    "jsx-a11y/anchor-has-content": "off",
    "no-underscore-dangle": 0,
    "no-alert": 0,
    "max-len": 0,
    "no-mixed-operators": 0,
    "prefer-rest-params": 0,
    "no-console": 0,
    "no-restricted-syntax": 0,
    "no-undef": 0,
    "no-unused-vars": 0,
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "prettier/prettier": ["error"],
    "import/no-named-as-default": 0,
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "off",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "import/order": [
      "error",
      { "groups": ["builtin", "external", "parent", "sibling", "index"] }
    ]
  }
}
